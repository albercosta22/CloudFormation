Description:  Template de Alberto Costa para crear una VPC con una instancia EC2 con apache montado.

Parameters:
  EnvironmentName:
    Description: Creacion de VPC con una instancia con apache
    Type: String

  VpcCIDR:
    Description: Rango de direcciones IPs de la VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: Rango de direcciones IP de la subred publica
    Type: String
    Default: 10.0.10.0/24

  PrivateSubnet1CIDR:
    Description: Rango de direcciones IP de la subred privada
    Type: String
    Default: 10.0.20.0/24


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:  
        Ref: VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value:  !Ref EnvironmentName
        

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: 'Puerta de enlace'
        
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:  
        Ref: VPC
      InternetGatewayId:  
        Ref: InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:  
        Ref: VPC
      AvailabilityZone: 'us-east-1a'
      CidrBlock:  
        Ref: PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Subred Publica'
        

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:  
        Ref: VPC
      AvailabilityZone: 'us-east-1a'
      CidrBlock:  
        Ref: PrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: 'Subred Privada'
        

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value: 'Tabla de enrutamiento publica'
        

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:  
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:  
        Ref: InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:  
        Ref: PublicRouteTable
      SubnetId:  
        Ref: PublicSubnet1


  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
        - Key: Name
          Value:  'Tabla_de_enrutamiento_privada'
        

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:  
        Ref: PrivateRouteTable1
      SubnetId:  
        Ref: PrivateSubnet1


  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Grupo de seguridad que permite la conexion total"
      VpcId:  
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: "Name"
          Value: "conexion_total"
        

  Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-053b0d53c279acc90"
      InstanceType: "t2.micro"
      KeyName: Clave-Alberto
      SecurityGroupIds:
        - Ref: SecurityGroup
      SubnetId: 
        Ref: PublicSubnet1
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo su
            sudo apt-get update -y
            sudo apt-get install -y apache2
      Tags:
        - Key: "Name"
          Value: "Instancia-Apache"
        